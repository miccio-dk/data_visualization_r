shiny::runApp()
runApp()
runApp()
runApp()
lst_devices_id
as.list(lst_devices_id)
runApp()
list("a", "b")
c("a", "b")
runApp()
runApp()
lst_devices_id
as.array(lst_devices_id)
as.list(lst_devices_id)
as.character(lst_devices_id)
as.array(lst_devices_id$device_id)
runApp()
runApp()
?addPolygons
runApp()
?colorFactor
runApp()
library("digest")
digest(c("a", "b"), algo = "crc32", raw = TRUE)
runApp()
runApp()
range(vdigest(data_sorted$device_id))
range(vdigest(data_sorted$device_id, algo = "crc32"))
range(vdigest(data_sorted$device_id, algo = "xxsha32"))
range(vdigest(data_sorted$device_id, algo = "xxhash32"))
range(vdigest(data_sorted$device_id, algo = "xxhash32", raw = TRUE))
range(vdigest(data_sorted$device_id, algo = "xxhash32", raw = FALSE))
range(vdigest(data_sorted$device_id, algo = "xxhash32", raw = TRUE))
c(1, 2)
vdigest(data_sorted$device_id, algo = "xxhash32", raw = TRUE)
?colorFactor
runApp()
runApp()
?addPolylines
runApp()
runApp()
sl_paths
sl_paths[["ID"]]
sl_paths$ID
colors()
runApp()
runApp()
runApp()
col2rgb("white")
as.array(col2rgb("white"))
as.vector(col2rgb("white"))
runApp()
as.vector(col2rgb("white"))
rgb(as.vector(col2rgb("white")))
runApp()
runApp()
?I
sl_paths
runApp()
sl_paths
dput(sl_paths)
sl_paths$lines
sl_paths.lines
sl_paths
sl_paths@lines
sl_paths@lines@Lines
sl_paths@lines[1]
sl_paths@lines[1]@Lines
(sl_paths@lines[1])@Lines
sl_paths@lines[1]
sl_paths@lines[1]$Lines
sl_paths@lines[1]$Line
sl_paths@lines[1]$Lines
sl_paths@lines[1]@Lines
sl_paths@lines[1]@Line
sl_paths@lines[1].Line
sl_paths@lines[1]$Lines
sl_paths@lines[1]$Lines@Line
sl_paths@lines[1]$ID
sl_paths@lines[1]$a
sl_paths@lines[1]
dput(sl_paths@lines[1])
dput(sl_paths@lines)
dput(sl_paths@lines[1][1])
dput(sl_paths@lines[[1])
dput(sl_paths@lines[[1]])
dput(sl_paths@lines[[1]]@Lines)
sl_paths@lines[[1]]@Lines
sl_paths@lines[[1]]@Lines@coords
sl_paths@lines[[1]]@Lines@
runApp()
sl_paths@lines[[1]]@Lines
sl_paths@lines[[1]]
sl_paths@lines[[1]]@ID
runApp()
runApp()
runApp()
